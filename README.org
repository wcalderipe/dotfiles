* dotfiles

[[https://github.com/wcalderipe/dotfiles/workflows/CI/badge.svg]]

[[resources/screenshot-emacs.png]]

** Major rewrite goals

*** DONE Everything must have a purpose
    CLOSED: [2020-07-28 mar. 20:30]

    If I don't know why it's there it will be removed. I normally tend to
    forget things in the long run, so documentation here will be the key.

*** TODO Isolation

    Sometimes Ansible roles have internal dependencies, for instance,
    emacs task also install packages system dependencies. These tasks are
    tagged with =deps= and you can skip them with the following command:

    #+BEGIN_SRC shell
      $ ansible-playbook \
        --inventory ./ansible/hosts \
        --tags "emacs" \
        --skip-tags "deps" \
        ./ansible/main.yml
    #+END_SRC

    It's not only about dependencies, but it's also a matter of keep
    everything needed to make something to work as near as possible from
    each other. For example, I don't want to track scattered
    configurations to make a software work -- I want them grouped by
    purpose. Once achieved, I'll be able to add new software and delete
    existing ones without fear of breaking something or left overs in my
    system -- experimenting is the ultimate goal.

*** DONE Testability
    CLOSED: [2020-07-28 mar. 20:32]

    I'd like to run my dotfiles in a docker container from time to time so
    I can do some manual test and therefore have a minimal level of
    confidence that I won't fuck everything on my local environment.

    The driver that justify this effort is continuous improvement on my
    workflow.

    #+BEGIN_SRC shell
      docker build --tag dotfiles .

      docker run -it \
             --volume ~/dev/dotfiles/ansible:/home/tester/dev/dotfiles/ansible \
             dotfiles
    #+END_SRC

*** DONE Increase the automation level
    CLOSED: [2020-07-28 mar. 20:32]

    After push the button, it must have zero human interaction until
    everything is done.

** Tasks

** TODO take a look at [[https://feh.finalrewind.org/][feh console image viewer]]

   It would be great to use alongside PlantUML mode.

** TODO look at spacemacs js and ts config

   https://github.com/syl20bnr/spacemacs/blob/master/layers/%2Blang/javascript/packages.el

** TODO look at eyebrowse as emacs tab manager

   https://github.com/ilmotta/dotfiles/blob/78ce494f9c2397b9f5fba68f94ad8729672aa3b3/emacs.d/lisp/my-packages-misc.el#L382

** Ansible

  IMPORTANT: Use --ask-become-pass option for common role

  Playbook: A file that defines several tasks to be executed in a target
  machine.

  Role: Organizes multiple, related tasks with the data needed to run
  those tasks (variables, files, templates).

  Tags are useful to run just set of tasks and/or roles.
  https://docs.ansible.com/ansible/latest/user_guide/playbooks_tags.html

  ansible-playbook -i ./ansible/hosts --tags "zsh" ./ansible/main.yml

  #+BEGIN_SRC shell
    ansible-playbook -i ./ansible/hosts ./ansible/main.yml
  #+END_SRC

** Debug in a task

   #+BEGIN_SRC yaml
       - name: FOO
         debug: "msg={{ lookup('env', 'HOME') }}"
   #+END_SRC

** Terminal

   Tags: zsh, zprezto, tmux

   #+BEGIN_SRC shell
   ansible-playbook -i ./ansible/hosts \
     --tags="terminal" \
     --skip-tags="zprezto,tmux" \
     ./ansible/main.yml
   #+END_SRC

** Docker

   #+BEGIN_SRC shell
     docker build --tag dotfiles .

     docker run -it dotfiles
   #+END_SRC
